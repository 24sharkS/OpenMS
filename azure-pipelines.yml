# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
  - task: Bash@3
    condition: false
    inputs:
      targetType: 'inline'
      script: 
        cd .. &&
        mkdir -p contrib_build &&
        curl https://abibuilder.informatik.uni-tuebingen.de/archive/openms/contrib/windows/x64/msvc-15/contrib_build.tar.gz -s -o contrib_build.tar.gz &&
        tar xzf contrib_build.tar.gz &&
        ls -la &&
        rm contrib_build.tar.gz
    displayName: Download and extract contrib

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: 
        cd .. &&
        git clone https://github.com/skalee/non-interactive-qt-installer &&
        chmod +x non-interactive-qt-installer/qt_installer.sh
    displayName: Download thirdparty QT installer

  - task: file-creator@5
    inputs:
      filepath: C:\Qt\qt-script.js
      filecontent:
        var InstallComponents = [
          "qt.qt5.5123.win64_msvc2017_64"
        ];

        var InstallPath = "C:\\Qt";

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: 
        ./non-interactive-qt-installer/qt_installer.sh
    env:
      QT_INSTALLER_DOWNLOAD_NAME: "qt-unified-windows-x86-online.exe"
      QT_INSTALLER_VARS: "C:\\Qt\\qt-script.js"
    displayName: Install QT

  - task: Bash@3
    condition: false
    inputs:
      targetType: 'inline'
      script: 
        cd .. 
        mkdir -p build
        cmake
    displayName: Run CMake
    
