# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
  - checkout: self
    fetchDepth: 5
    submodules: recursive  
    path: OpenMS

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.6'

  - task: CacheBeta@1
    inputs:
      key: contrib | $(Agent.OS)
      path: $(Pipeline.Workspace)/contrib_build
      cacheHitVar: CONTRIB_RESTORED

  - task: CacheBeta@1
    inputs:
      key: qt | $(Agent.OS)
      path: $(Pipeline.Workspace)/QT
      cacheHitVar: QT_RESTORED

  - script: python -m pip install --upgrade pip setuptools wheel
    displayName: 'Install python tools'
    condition: ne(variables.QT_RESTORED, 'true')

  - script: python -m pip install requests semantic_version lxml
    displayName: 'Install python packages'
    condition: ne(variables.QT_RESTORED, 'true')

  - task: Bash@3
    #condition: ne(variables.CONTRIB_RESTORED, 'true')
    inputs:
      targetType: 'inline'
      workingDirectory: $(Pipeline.Workspace)
      script:
        mkdir -p contrib_build &&
        cd contrib_build &&
        curl https://abibuilder.informatik.uni-tuebingen.de/archive/openms/contrib/windows/x64/msvc-15/contrib_build.tar.gz -s -o contrib_build.tar.gz &&
        tar xzf contrib_build.tar.gz &&
        rm contrib_build.tar.gz
    displayName: Download and extract contrib
    

  - task: Bash@3
    inputs:
      targetType: 'inline'
      workingDirectory: $(Pipeline.Workspace)
      script:
        git clone https://github.com/ads00/qt-downloader &&
        chmod +x qt-downloader/qt-downloader &&
        mkdir -p QT
    displayName: Install QT installer
    condition: ne(variables.QT_RESTORED, 'true')

  - task: PythonScript@0
    condition: ne(variables.QT_RESTORED, 'true')
    inputs:
      scriptSource: 'filePath'
      scriptPath: '$(Pipeline.Workspace)/qt-downloader/qt-downloader'
      arguments: 'windows desktop 5.12.6 win64_msvc2015_64'
      workingDirectory: '$(Pipeline.Workspace)/QT'
      

  - task: Bash@3
    inputs:
      workingDirectory: $(Pipeline.Workspace)/QT/5.12.6
      targetType: 'inline'
      script: 
        ls -la
    displayName: Check Qt

  - task: CMake@1
    inputs:
      cmakeArgs: '-DOPENMS_CONTRIB_LIBS="$(Pipeline.Workspace)/contrib_build" -DCMAKE_PREFIX_PATH="$(Pipeline.Workspace)/QT/5.12.6" $(Pipeline.Workspace)/OpenMS'

    
