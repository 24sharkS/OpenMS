pipeline {
    agent any

    stages {
        stage('Build and Test') {
            parallel {
                stage('Windows') {
                    agent {
                        label "win10"
                    }
                    stages {
                       stage("win build") {
                           steps {
                               echo 'build'
                               sh 'echo foo > wintest.txt'
                           }
                       }
                       stage("win test") {
                           steps {
                               echo 'test'
                               sh 'less wintest.txt'
                           }
                           post {
                            always {
                                stash includes: 'wintest.txt', name: 'testresult-win'
                            }
                           }
                       }
                    }
                }
                stage('Mac') {
                    agent {
                        label "highsierra"
                    }
                    stages {
                       stage("mac build") {
                           steps {
                               echo 'build'
                               sh 'echo bar > test.txt'
                           }
                           post {
                            always {
                                stash includes: 'test.txt', name: 'testresult-mac'
                            }
                           }
                       }
                       stage("mac test") {
                           steps {
                               echo 'test'
                               sh 'less test.txt'
                           }
                       }
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                unstash 'testresult-win'
                unstash 'testresult-mac'
                echo 'Deploying....'
            }
        }
    }
}
