pipeline {
    agent any

    stages {
        stage('Build and Test') {
            parallel {
                stage('Windows') {
                    agent {
                        label "win10"
                    }
                    stages {
                       stage("win build") {
                           steps {
                               echo 'build'
                               sh 'echo foo > wintest.txt'
                           }
                       }
                       stage("win test") {
                           steps {
                               echo 'test'
                               sh 'less wintest.txt'
                           }
                           post {
                            always {
                                stash includes: 'wintest.txt', name: 'testresult-win'
                            }
                           }
                       }
                    }
                }
                stage('Mac') {
                    agent {
                        label "highsierra"
                    }
                    stages {
                       stage("mac build") {
                           steps {
                               echo 'build'
                               sh 'echo bar > test.txt'
                           }
                           post {
                            always {
                                stash includes: 'test.txt', name: 'testresult-mac'
                            }
                           }
                       }
                       stage("mac test") {
                           steps {
                               echo 'test'
                               sh 'less test.txt'
                           }
                       }
                    }
                    post {
                        always{
                            //TODO evaluate if it makes sense to ignore some test results (e.g. mark them optional)
                            xunit (
                                thresholds: [ skipped(failureThreshold: '0'), failed(failureThreshold: '0') ],
                                tools: [ CTest(pattern: 'tools/jenkins/Test.xml', stopProcessingIfError: true) ]
                            )
                        }
                    }
                    post {
                        failure{
                            echo 'failed'
                        }
                    }
                }
                stage('PyOpenMS') {
                    agent {
                        label "openms && ci-ready"
                    }
                    stages {
                       stage("py build") {
                           steps {
                               echo 'build'
                               sh 'echo py > test.txt'
                           }
                       }
                       stage("py test") {
                           steps {
                               echo 'test'
                               sh 'less test.txt'
                           }
                       }
                    }
                    post {
                        always{
                                xunit (
                                    thresholds: [ skipped(failureThreshold: '0'), failed(failureThreshold: '0') ],
                                    tools: [ CTest(pattern: 'tools/jenkins/Test.xml', stopProcessingIfError: true) ]
                                )
                        }
                    }
                    post {
                        failure{
                            echo 'failed'
                        }
                    }
                }
            }
        }
        stage('Deploy') {
            when {
                // so we do not allocate an agent unnecessarily
                beforeAgent true
                //When switching to multibranch pipeline, use the following
                // branch 'test/Jenkinsfile'
                expression { env.BRANCH_NAME == 'test/Jenkinsfile' }
            }
            steps {
                unstash 'testresult-win'
                unstash 'testresult-mac'
                echo 'Deploying....'
            }
        }
    }
}
